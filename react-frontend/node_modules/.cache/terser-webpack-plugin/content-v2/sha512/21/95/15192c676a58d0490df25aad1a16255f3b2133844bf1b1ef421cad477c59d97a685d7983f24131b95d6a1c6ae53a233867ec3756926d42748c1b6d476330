{"map":"{\"version\":3,\"sources\":[\"/home/ubuntu/FlaskAndReact/react-frontend/src/components/World.js\",\"/home/ubuntu/FlaskAndReact/react-frontend/src/components/InputForm.js\",\"/home/ubuntu/FlaskAndReact/react-frontend/src/store/modules/addResult.js\",\"/home/ubuntu/FlaskAndReact/react-frontend/src/components/App.js\",\"/home/ubuntu/FlaskAndReact/react-frontend/src/serviceWorker.js\",\"/home/ubuntu/FlaskAndReact/react-frontend/src/store/modules/index.js\",\"/home/ubuntu/FlaskAndReact/react-frontend/src/index.js\"],\"names\":[\"geo_Header\",\"options\",\"colorAxis\",\"colors\",\"legend\",\"World\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"data\",\"concat\",\"appData\",\"nextProps\",\"setState\",\"react_default\",\"a\",\"createElement\",\"index_esm\",\"chartType\",\"width\",\"height\",\"React\",\"Component\",\"InputForm1\",\"country\",\"value\",\"handleChange\",\"e\",\"defineProperty\",\"target\",\"name\",\"handleSubmit\",\"preventDefault\",\"onCreate\",\"handleClear\",\"Container\",\"Form\",\"onSubmit\",\"Row\",\"Label\",\"Control\",\"as\",\"required\",\"variant\",\"placeholder\",\"onChange\",\"Feedback\",\"type\",\"Group\",\"Col\",\"Button\",\"ADDER\",\"intialState\",\"list\",\"App\",\"classify\",\"preprcData\",\"inputDim\",\"tf\",\"paddedSeq\",\"pad\",\"length\",\"model\",\"predictOnBatch\",\"argMax\",\"dataSync\",\"handleCreate\",\"_ref\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"processedText\",\"singleObj\",\"wrap\",\"_context\",\"prev\",\"next\",\"fetch\",\"method\",\"body\",\"then\",\"response\",\"json\",\"result\",\"sent\",\"Number\",\"formData\",\"update\",\"$push\",\"stop\",\"_x\",\"apply\",\"arguments\",\"loading\",\"pageData\",\"class\",\"lib_default\",\"size\",\"spinnerColor\",\"spinnerWidth\",\"components_World\",\"InputForm\",\"connect\",\"dispatch\",\"elem\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"combineReducers\",\"addReducer\",\"undefined\",\"action\",\"devTools\",\"__REDUX_DEVTOOLS_EXTENSION__\",\"store\",\"createStore\",\"rootReducer\",\"console\",\"log\",\"getState\",\"ReactDOM\",\"render\",\"es\",\"src_components_App\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport Chart from \\\"react-google-charts\\\";\\n\\nlet geo_Header = [[\\\"Country\\\", \\\"Popularity\\\"]];\\n\\nconst options = {\\n colorAxis: {colors: ['black']},\\n legend: \\\"none\\\"\\n};\\n\\n\\nclass World extends React.Component {\\n  constructor(props){\\n     super(props);\\n     this.state = {\\n       data : geo_Header.concat(this.props.appData) \\n     };\\n  }\\n\\n  componentWillReceiveProps(nextProps) {\\n     \\n     if(nextProps.appData !== this.props.appData) {\\n        this.setState({data : this.state.data.concat(nextProps.appData)});\\n     }\\n  }\\n\\n\\n  render() {\\n\\n     return (\\n      <div> \\n        <Chart \\n\\tchartType=\\\"GeoChart\\\" \\n\\twidth=\\\"100%\\\" \\n\\theight=\\\"300px\\\"\\n\\tdata={this.state.data} \\n\\toptions={options} \\n\\t/>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default World;\\n\",\"import React from 'react';\\nimport {\\n  Form,\\n  FormGroup,\\n  FormLabel,\\n  FormControl,\\n  Button,\\n  Col,\\n  Container\\n} from 'react-bootstrap';\\n\\n\\n\\nclass InputForm1 extends React.Component {\\n   state = {\\n      country: '',\\n      value: ''\\n   }\\n\\n   handleChange = (e) => {\\n       this.setState({\\n          [e.target.name]: e.target.value\\n       });\\n   }\\n   handleSubmit = (e) => {\\n\\te.preventDefault();\\n\\tthis.props.onCreate(this.state); // 상태 값을 부모에게 전달???\\n\\tthis.setState({\\n\\t   country: '',\\n           value: ''\\n        });\\n   }\\n   handleClear = (e) => {\\n   \\te.preventDefault();\\n   }\\n\\n   render() {\\n      return (\\n         <Container>\\n\\t   <Form onSubmit={this.handleSubmit}>\\n           <Form.Row>\\n               <Form.Label>state.country</Form.Label>\\n               <Form.Control as=\\\"textarea\\\"\\n                  required\\n                  variant=\\\"dark\\\"\\n                  placeholder=\\\"Country\\\"\\n                  value={this.state.country}\\n                  onChange={this.handleChange}\\n                  name=\\\"country\\\"/>\\n               <Form.Control.Feedback type=\\\"invalid\\\">\\n                  Please provide a valid cirt.\\n               </Form.Control.Feedback>\\n           </Form.Row>\\n           <Form.Row>\\n               <Form.Label>state.popularity</Form.Label>\\n\\t       <Form.Control as=\\\"textarea\\\" \\n                  variant=\\\"dark\\\"\\n\\t          placeholder=\\\"Popularity\\\"\\n                  value={this.state.value}\\n                  onChange={this.handleChange}\\n                  name=\\\"value\\\"/>\\n           </Form.Row>\\n           <br></br>\\n           <Form.Row>\\n               <Form.Group as={Col}>\\n                  <Button variant=\\\"dark\\\"  type=\\\"submit\\\"> 등 록 </Button>\\n               </Form.Group>\\n               <Form.Group as={Col}>\\n                  <Button variant=\\\"danger\\\" type=\\\"clear\\\"> 취 소 </Button>\\n               </Form.Group>\\n           </Form.Row>\\n           </Form>\\n         </Container>\\n     );\\n   }\\n}\\n\\nexport default InputForm1;\\n\",\"const ADDER = 'result/ADDER';\\n\\nexport const adder = elem => ({ type: ADDER, elem });\\n\\nconst intialState = {\\n\\tlist: [['AAAAAA']]\\n};\\n\\nexport default function addReducer(state = intialState, action)\\n{\\n\\tswitch(action.type) {\\n\\t\\tcase ADDER:\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tlist: action.elem\\n\\t\\t\\t};\\n\\t\\tdefault:\\n\\t\\t\\treturn state;\\n\\t}\\n}\\n\\n\",\"import React, { Component } from 'react';\\nimport World from './World';\\nimport Form1 from './InputForm';\\nimport * as tf from '@tensorflow/tfjs';\\nimport './App.css'\\nimport update from 'react-addons-update';\\nimport Spinner from 'react-spinner-material';\\n\\nimport { connect } from 'react-redux';\\nimport { adder } from '../store/modules/addResult';\\n\\nconst modelURL = 'http://54.180.91.80/model';\\n\\n//////////////////////////////////////////////\\nclass App extends Component {\\n\\tconstructor() {\\n\\t\\tsuper();\\n\\t\\tthis.state = {\\n\\t\\t\\tformData: [],\\n\\t\\t\\tmodel: null,\\n      \\t\\t};\\n  \\t}\\n  \\n\\tasync componentDidMount() {\\n     \\tthis.setState({ model: await tf.loadLayersModel(modelURL),\\n                   \\tloading: true});\\n  \\t}\\n\\n\\tclassify = (preprcData) => {\\n     \\t\\t\\tconst inputDim = [1, 150]\\n     \\t// Data Preprocessing2 Padding preprocessedSequence -> [1, 150]\\n\\t// prediction using model :: output as a softmax result that represent's probability of each 20 elements.\\n\\n     \\tconst prediction = tf.tidy(() => { \\n        \\tlet paddedSeq = tf.tensor1d(preprcData).pad( [[ inputDim[1]-preprcData.length, 0 ]] );\\n\\t\\treturn (this.state.model).predictOnBatch(tf.reshape(paddedSeq, inputDim));\\n     \\t});\\n     \\treturn prediction.argMax(1).dataSync();  \\n  \\t}\\n\\n  \\t// callback function InputForm component : get input value and post server \\n  \\thandleCreate = async (data) => {\\n     \\t// Text Data -> server (POST : txt) -> text2Seq \\n     \\t\\tvar processedText = await fetch(\\\"/getData\\\", { method: 'POST',\\n            \\t\\t\\t\\t\\t\\t      body: [data.country]\\n\\t\\t\\t\\t\\t\\t\\t    }).then(response => {\\n           \\t\\treturn response.json();\\n        \\t}).then(result => {\\n           \\t\\treturn result;\\n     \\t\\t});\\n\\n     \\t\\tdata.value  = this.classify(processedText[0]);\\n     \\t\\tdata.country = \\\"China\\\";\\n     \\t\\n\\t\\t////\\n\\t\\tresult([data.value]);\\n\\t\\t////\\n\\n     \\tvar singleObj = [data.country, Number(data.value)* 100];\\n\\t\\n     \\tthis.setState({ formData: update( this.state.formData,\\n           \\t\\t\\t\\t\\t{\\n              \\t\\t\\t\\t\\t\\t$push: [singleObj]\\n           \\t\\t\\t\\t\\t})\\n     \\t\\t     })\\n  \\t}\\n \\n  \\trender() {\\n  \\t\\tlet pageData;\\n    \\t\\tif( this.state.model === null ) {\\n       \\t\\t\\tpageData = <container class=\\\"centered\\\">\\n                  \\t\\t\\t<Spinner size={120} \\n                           \\t \\t \\t spinnerColor={\\\"blue\\\"} \\n                           \\t \\t\\t spinnerWidth={2} />\\n                  \\t\\t\\t<p>LOADING MODEL</p>\\n                  \\t\\t   </container>\\n    \\t\\t} else {\\n       \\t\\t\\tpageData = <div>\\n                  \\t\\t\\t<World appData={this.state.formData} />\\n                  \\t\\t\\t<Form1 onCreate={this.handleCreate} />\\n                  \\t\\t   </div>   \\n    \\t\\t}\\n    \\t\\treturn ( <div>{pageData}</div> );\\n  \\t}\\n}\\n\\n\\nconst mapStateToProps = state => ({\\n\\tlist: state.result.list,\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n\\tresult: list => dispatch(adder(list)),\\n});\\n\\n\\n\\n\\nexport default connect(\\n\\tmapStateToProps,\\n\\tmapDispatchToProps\\n)(App);\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import { combineReducers } from 'redux';\\nimport addReducer from './addResult';\\n\\nexport default combineReducers({\\n\\taddReducer,\\n});\\n\\n\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css';\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './components/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport './index.css'\\n\\nimport { createStore } from 'redux';\\nimport rootReducer from './store/modules'\\nimport { Provider } from 'react-redux';\\n\\n\\n\\n\\nconst devTools = \\n\\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\\nconst store = createStore(rootReducer, devTools);\\nconsole.log(store.getState());\\n\\nReactDOM.render(\\n\\t<Provider store={store}>\\n\\t<App/>\\n\\t</Provider>,\\n\\tdocument.getElementById('root')\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{112:function(e,t,a){e.exports=a(218)},125:function(e,t){},127:function(e,t){},160:function(e,t){},161:function(e,t){},207:function(e,t){},208:function(e,t){},209:function(e,t){},210:function(e,t,a){},217:function(e,t,a){},218:function(e,t,a){\"use strict\";a.r(t);a(113);var n=a(1),r=a.n(n),c=a(101),o=a.n(c),l=a(34),u=a.n(l),i=a(60),s=a(21),h=a(22),p=a(25),d=a(23),m=a(26),f=a(102),v=[[\"Country\",\"Popularity\"]],b={colorAxis:{colors:[\"black\"]},legend:\"none\"},E=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(p.a)(this,Object(d.a)(t).call(this,e))).state={data:v.concat(a.props.appData)},a}return Object(m.a)(t,e),Object(h.a)(t,[{key:\"componentWillReceiveProps\",value:function(e){e.appData!==this.props.appData&&this.setState({data:this.state.data.concat(e.appData)})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(f.a,{chartType:\"GeoChart\",width:\"100%\",height:\"300px\",data:this.state.data,options:b}))}}]),t}(r.a.Component),y=a(104),O=a(220),w=a(221),j=a(107),C=a(222),D=function(e){function t(){var e,a;Object(s.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(p.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).state={country:\"\",value:\"\"},a.handleChange=function(e){a.setState(Object(y.a)({},e.target.name,e.target.value))},a.handleSubmit=function(e){e.preventDefault(),a.props.onCreate(a.state),a.setState({country:\"\",value:\"\"})},a.handleClear=function(e){e.preventDefault()},a}return Object(m.a)(t,e),Object(h.a)(t,[{key:\"render\",value:function(){return r.a.createElement(O.a,null,r.a.createElement(w.a,{onSubmit:this.handleSubmit},r.a.createElement(w.a.Row,null,r.a.createElement(w.a.Label,null,\"state.country\"),r.a.createElement(w.a.Control,{as:\"textarea\",required:!0,variant:\"dark\",placeholder:\"Country\",value:this.state.country,onChange:this.handleChange,name:\"country\"}),r.a.createElement(w.a.Control.Feedback,{type:\"invalid\"},\"Please provide a valid cirt.\")),r.a.createElement(w.a.Row,null,r.a.createElement(w.a.Label,null,\"state.popularity\"),r.a.createElement(w.a.Control,{as:\"textarea\",variant:\"dark\",placeholder:\"Popularity\",value:this.state.value,onChange:this.handleChange,name:\"value\"})),r.a.createElement(\"br\",null),r.a.createElement(w.a.Row,null,r.a.createElement(w.a.Group,{as:j.a},r.a.createElement(C.a,{variant:\"dark\",type:\"submit\"},\" \\ub4f1 \\ub85d \")),r.a.createElement(w.a.Group,{as:j.a},r.a.createElement(C.a,{variant:\"danger\",type:\"clear\"},\" \\ucde8 \\uc18c \")))))}}]),t}(r.a.Component),g=a(35),S=(a(210),a(108)),k=a.n(S),_=a(109),x=a.n(_),A=a(45),R=\"result/ADDER\",L={list:[[\"AAAAAA\"]]};var N=function(e){function t(){var e;return Object(s.a)(this,t),(e=Object(p.a)(this,Object(d.a)(t).call(this))).classify=function(t){var a=[1,150];return g.d(function(){var n=g.c(t).pad([[a[1]-t.length,0]]);return e.state.model.predictOnBatch(g.b(n,a))}).argMax(1).dataSync()},e.handleCreate=function(){var t=Object(i.a)(u.a.mark(function t(a){var n,r;return u.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(\"/getData\",{method:\"POST\",body:[a.country]}).then(function(e){return e.json()}).then(function(e){return e});case 2:n=t.sent,a.value=e.classify(n[0]),a.country=\"China\",result([a.value]),r=[a.country,100*Number(a.value)],e.setState({formData:k()(e.state.formData,{$push:[r]})});case 8:case\"end\":return t.stop()}},t)}));return function(e){return t.apply(this,arguments)}}(),e.state={formData:[],model:null},e}return Object(m.a)(t,e),Object(h.a)(t,[{key:\"componentDidMount\",value:function(){var e=Object(i.a)(u.a.mark(function e(){return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=this,e.next=3,g.a(\"http://54.180.91.80/model\");case 3:e.t1=e.sent,e.t2={model:e.t1,loading:!0},e.t0.setState.call(e.t0,e.t2);case 6:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){var e;return e=null===this.state.model?r.a.createElement(\"container\",{class:\"centered\"},r.a.createElement(x.a,{size:120,spinnerColor:\"blue\",spinnerWidth:2}),r.a.createElement(\"p\",null,\"LOADING MODEL\")):r.a.createElement(\"div\",null,r.a.createElement(E,{appData:this.state.formData}),r.a.createElement(D,{onCreate:this.handleCreate})),r.a.createElement(\"div\",null,e)}}]),t}(n.Component),T=Object(A.b)(function(e){return{list:e.result.list}},function(e){return{result:function(t){return e({type:R,elem:t})}}})(N);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(217);var P=a(24),G=Object(P.b)({addReducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:L,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case R:return{list:t.elem};default:return e}}}),I=window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__(),X=Object(P.c)(G,I);console.log(X.getState()),o.a.render(r.a.createElement(A.a,{store:X},r.a.createElement(T,null)),document.getElementById(\"root\"))}},[[112,1,2]]]);","extractedComments":[]}