{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\components\\\\World.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\components\\\\InputForm.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\components\\\\PredictResult.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\store\\\\modules\\\\addResult.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\components\\\\App.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\store\\\\modules\\\\index.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\index.js\"],\"names\":[\"geo_Header\",\"options\",\"colorAxis\",\"colors\",\"legend\",\"World\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"data\",\"concat\",\"appData\",\"nextProps\",\"setState\",\"react_default\",\"a\",\"createElement\",\"index_esm\",\"chartType\",\"width\",\"height\",\"React\",\"Component\",\"InputForm1\",\"country\",\"handleChange\",\"e\",\"defineProperty\",\"target\",\"name\",\"value\",\"handleSubmit\",\"preventDefault\",\"onCreate\",\"handleClear\",\"Form\",\"onSubmit\",\"Row\",\"Label\",\"Control\",\"as\",\"required\",\"variant\",\"placeholder\",\"onChange\",\"Feedback\",\"type\",\"Group\",\"Col\",\"Button\",\"PredictResult\",\"load\",\"arr\",\"i\",\"length\",\"tmp\",\"toString\",\"push\",\"console\",\"log\",\"connect\",\"addReducer\",\"list\",\"ADDER\",\"intialState\",\"App\",\"classify\",\"preprcData\",\"inputDim\",\"tf\",\"paddedSeq\",\"pad\",\"model\",\"predictOnBatch\",\"dataSync\",\"handleCreate\",\"_ref\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"processedText\",\"singleObj\",\"wrap\",\"_context\",\"prev\",\"next\",\"fetch\",\"method\",\"body\",\"then\",\"response\",\"json\",\"result\",\"sent\",\"adder\",\"Number\",\"formData\",\"update\",\"$push\",\"stop\",\"_x\",\"apply\",\"arguments\",\"loading\",\"pageData\",\"class\",\"lib_default\",\"size\",\"spinnerColor\",\"spinnerWidth\",\"Container\",\"Jumbotron\",\"components_World\",\"components_PredictResult\",\"InputForm\",\"dispatch\",\"predRes\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"combineReducers\",\"undefined\",\"action\",\"devTools\",\"__REDUX_DEVTOOLS_EXTENSION__\",\"store\",\"createStore\",\"rootReducer\",\"ReactDOM\",\"render\",\"es\",\"src_components_App\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\nimport Chart from \\\"react-google-charts\\\";\\r\\n\\r\\nlet geo_Header = [[\\\"Country\\\", \\\"Popularity\\\"]];\\r\\n\\r\\nconst options = { colorAxis: {colors: ['black']},\\r\\n                  legend: \\\"none\\\" };\\r\\n\\r\\n\\r\\nclass World extends React.Component {\\r\\n  constructor(props){\\r\\n    super(props);\\r\\n    this.state = {\\r\\n      data : geo_Header.concat(this.props.appData) \\r\\n    };\\r\\n  }\\r\\n\\r\\n  componentWillReceiveProps(nextProps) {    \\r\\n     if(nextProps.appData !== this.props.appData) {\\r\\n        this.setState({data : this.state.data.concat(nextProps.appData)});\\r\\n     }\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n     return (\\r\\n        <Chart  chartType=\\\"GeoChart\\\" \\r\\n                width=\\\"100%\\\" \\r\\n\\t              height=\\\"5%\\\"\\r\\n\\t              data={this.state.data} \\r\\n\\t              options={options} />\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default World;\",\"import React from 'react';\\r\\nimport {\\r\\n  Form,\\r\\n  Button,\\r\\n  Col,\\r\\n} from 'react-bootstrap';\\r\\n\\r\\nclass InputForm1 extends React.Component {\\r\\n   state = { country: '' }\\r\\n\\r\\n   handleChange = (e) => {\\r\\n      this.setState({\\r\\n         [e.target.name]: e.target.value\\r\\n      });\\r\\n   }\\r\\n\\r\\n   handleSubmit = (e) => {\\r\\n\\t   e.preventDefault();\\r\\n\\t   this.props.onCreate(this.state); // 상태 값을 부모에게 전달???\\r\\n\\t   this.setState({\\r\\n\\t      country: ''\\r\\n      });\\r\\n   }\\r\\n\\r\\n   handleClear = (e) => {\\r\\n      e.preventDefault();\\r\\n   }\\r\\n\\r\\n   render() {\\r\\n      return (\\r\\n\\t         <Form onSubmit={this.handleSubmit}>\\r\\n               <Form.Row>\\r\\n                  <Form.Label>Input ingredient list</Form.Label>\\r\\n                  <Form.Control  as=\\\"textarea\\\"\\r\\n                                 required\\r\\n                                 variant=\\\"dark\\\"\\r\\n                                 placeholder=\\\"Tomato, Green Tea, olive oil\\\"\\r\\n                                 value={this.state.country}\\r\\n                                 onChange={this.handleChange}\\r\\n                                 name=\\\"country\\\"/>\\r\\n                  <Form.Control.Feedback type=\\\"invalid\\\">\\r\\n                     Please provide a valid input.\\r\\n                  </Form.Control.Feedback>\\r\\n               </Form.Row>\\r\\n               <br></br>\\r\\n               <Form.Row>\\r\\n                  <Form.Group as={Col}>\\r\\n                     <Button variant=\\\"dark\\\"  type=\\\"submit\\\"> 등 록 </Button>\\r\\n                  </Form.Group>\\r\\n                  <Form.Group as={Col}>\\r\\n                     <Button variant=\\\"danger\\\" type=\\\"clear\\\"> 취 소 </Button>\\r\\n                  </Form.Group>\\r\\n               </Form.Row>\\r\\n            </Form>\\r\\n     );\\r\\n   }\\r\\n}\\r\\n\\r\\nexport default InputForm1;\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport { connect } from 'react-redux';\\r\\nimport Chart from \\\"react-google-charts\\\";\\r\\n\\r\\n\\r\\nclass PredictResult extends Component {\\r\\n  constructor(props)\\r\\n  {\\r\\n    super(props);\\r\\n    this.state =  { data : null,\\r\\n                    load : false \\r\\n                  };\\r\\n  }\\r\\n\\r\\n  componentWillReceiveProps(nextProps) {    \\r\\n    if(nextProps.value !== this.state.value) {\\r\\n       this.setState({data : nextProps.value,\\r\\n                      load : true });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n\\r\\n    let arr = [[\\\"Country\\\", \\\"Popularity\\\"]];\\r\\n\\r\\n    if(this.state.load === true)\\r\\n    {\\r\\n      const { data } = this.state;\\r\\n      for(var i = 0; i < data.length; i+=1 )  \\r\\n      {  \\r\\n        const tmp = [i.toString(), data[i]];\\r\\n        arr.push(tmp);\\r\\n      }\\r\\n    }\\r\\n    console.log(arr);\\r\\n    return (\\r\\n      <div>\\r\\n        <Chart  width={'100%'}\\r\\n                height={'400px'}\\r\\n                chartType=\\\"BarChart\\\"\\r\\n                data={arr}\\r\\n        />        \\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nlet mapStateToProps = (state) => {\\r\\n\\treturn {\\r\\n\\t\\tvalue : state.addReducer.list\\r\\n\\t};\\r\\n}\\r\\n\\r\\nexport default connect( mapStateToProps )( PredictResult );\",\"const ADDER = 'addReducer/ADDER';\\n\\nexport const adder = list => ({ type: ADDER, list });\\n\\nconst intialState = {\\n\\tlist: []\\n};\\n\\nexport default function addReducer(state = intialState, action)\\n{\\n\\tswitch(action.type) {\\n\\t\\tcase ADDER:\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tlist: action.list\\n\\t\\t\\t};\\n\\t\\tdefault:\\n\\t\\t\\treturn state;\\n\\t}\\n}\\n\\n\",\"import React, { Component } from 'react';\\r\\nimport World from './World';\\r\\nimport Form1 from './InputForm';\\r\\nimport PredictResult from './PredictResult';\\r\\nimport * as tf from '@tensorflow/tfjs';\\r\\nimport update from 'react-addons-update';\\r\\nimport Spinner from 'react-spinner-material';\\r\\nimport { connect } from 'react-redux';\\r\\nimport { adder } from '../store/modules/addResult';\\r\\nimport './App.css'\\r\\nimport { Jumbotron, Container } from 'react-bootstrap';\\r\\n\\r\\n\\r\\n\\r\\nconst MODEL_URL = 'http://127.0.0.1/model';\\r\\n\\r\\n//////////////////////////////////////////////\\r\\nclass App extends Component {\\r\\n\\tconstructor(props) {\\r\\n\\t\\tsuper(props);\\r\\n\\t\\tthis.state = {\\r\\n\\t\\t\\tformData: [],\\r\\n\\t\\t\\tmodel: null,\\r\\n      \\t};\\r\\n  \\t}\\r\\n  \\r\\n\\tasync componentDidMount() {\\r\\n     \\tthis.setState({ model: await tf.loadLayersModel(MODEL_URL),\\r\\n                   \\t\\tloading: true});\\r\\n  \\t}\\r\\n\\r\\n\\tclassify = (preprcData) => {\\r\\n     \\tconst inputDim = [1, 150]\\r\\n     \\t// Data Preprocessing2 Padding preprocessedSequence -> [1, 150]\\r\\n\\t\\t// prediction using model :: output as a softmax result that represent's probability of each 20 elements.\\r\\n\\r\\n     \\tconst prediction = tf.tidy(() => { \\r\\n        \\tlet paddedSeq = tf.tensor1d(preprcData).pad( [[ inputDim[1]-preprcData.length, 0 ]] );\\r\\n\\t\\t\\treturn (this.state.model).predictOnBatch(tf.reshape(paddedSeq, inputDim));\\r\\n\\t\\t });\\r\\n\\t\\t \\r\\n     \\treturn prediction.dataSync();  \\r\\n  \\t}\\r\\n\\r\\n  \\t// callback function InputForm component : get input value and post server \\r\\n  \\thandleCreate = async (data) => {\\r\\n     \\t// Text Data -> server (POST : txt) -> text2Seq \\r\\n     \\tvar processedText = await fetch(\\\"/getData\\\", {\\tmethod: 'POST',\\r\\n            \\t\\t\\t\\t\\t\\t      \\t\\t\\t\\tbody: [data.country]\\r\\n\\t\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t\\t}).then(response => {\\r\\n           \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn response.json();\\r\\n        \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}).then(result => {\\r\\n           \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn result;\\r\\n     \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t});\\r\\n\\r\\n     \\tdata.value  = this.classify(processedText[0]);\\r\\n     \\tdata.country = \\\"China\\\";\\r\\n\\t\\t\\t \\r\\n\\t\\t//Redux Part!!!!!!!!!!!!!!!!!!!!!!!!!!//\\r\\n\\t\\tconst { adder } = this.props;\\r\\n\\t\\tadder(data.value);\\r\\n\\t\\t//Redux Part!!!!!!!!!!!!!!!!!!!!!!!!!!//\\r\\n\\r\\n     \\tvar singleObj = [data.country, Number(data.value)* 100];\\r\\n     \\tthis.setState({ formData: update( this.state.formData, { $push: [singleObj] }) })\\r\\n  \\t}\\r\\n \\r\\n  \\trender() {\\r\\n  \\t\\tlet pageData;\\r\\n    \\t\\tif( this.state.model === null ) {\\r\\n\\t\\t\\t\\tpageData = <container class=\\\"centered\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<Spinner size={120} \\r\\n                           \\t \\t \\t \\t spinnerColor={\\\"blue\\\"} \\r\\n                           \\t \\t\\t \\t spinnerWidth={2} />\\r\\n                  \\t\\t\\t\\t<p>LOADING MODEL</p>\\r\\n                  \\t\\t   </container>\\r\\n\\t\\t\\t} else {\\r\\n       \\t\\t\\tpageData = <div>\\r\\n\\t\\t\\t\\t\\t   \\t\\t\\t<Container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Jumbotron >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h1>Prediction Model by Learning Ingredient-Cuisine</h1>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</Jumbotron>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<World appData={this.state.formData} />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<PredictResult/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<Form1 onCreate={this.handleCreate} />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</Container>  \\r\\n\\t\\t\\t\\t\\t\\t   </div>\\r\\n    \\t\\t}\\r\\n    \\t\\treturn ( <div>{pageData}</div> );\\r\\n  \\t}\\r\\n}\\r\\n\\r\\nlet mapStateToProps = (state) => {\\r\\n\\treturn {\\r\\n\\t\\tvalue : state.addReducer.list\\r\\n\\t};\\r\\n}\\r\\n\\r\\nconst mapDispatchToProps = dispatch => ({\\r\\n\\tadder: predRes => dispatch( adder(predRes) ),\\r\\n});\\r\\n\\r\\nexport default connect(\\r\\n\\tmapStateToProps,\\r\\n\\tmapDispatchToProps\\r\\n)(App);\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read https://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import { combineReducers } from 'redux';\\r\\nimport addReducer from './addResult';\\r\\n\\r\\n\\r\\nexport default combineReducers({\\r\\n\\taddReducer,\\r\\n});\\r\\n\\r\\n\\r\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css';\\r\\nimport React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport App from './components/App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\nimport './index.css'\\r\\n\\r\\nimport { createStore } from 'redux';\\r\\nimport rootReducer from './store/modules'\\r\\nimport { Provider } from 'react-redux';\\r\\n\\r\\nconst devTools = \\r\\n\\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\\r\\nconst store = createStore(rootReducer, devTools);\\r\\n\\r\\nReactDOM.render(\\r\\n\\t<Provider store={store}>\\r\\n\\t\\t<App/>\\r\\n\\t</Provider>,\\r\\n\\tdocument.getElementById('root')\\r\\n);\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{113:function(t,e,a){t.exports=a(219)},130:function(t,e){},132:function(t,e){},165:function(t,e){},166:function(t,e){},212:function(t,e){},213:function(t,e){},214:function(t,e){},217:function(t,e,a){},218:function(t,e,a){},219:function(t,e,a){\"use strict\";a.r(e);a(114);var n=a(1),r=a.n(n),c=a(102),o=a.n(c),l=a(35),i=a.n(l),u=a(61),s=a(18),d=a(19),h=a(21),p=a(20),f=a(22),m=a(45),v=[[\"Country\",\"Popularity\"]],b={colorAxis:{colors:[\"black\"]},legend:\"none\"},E=function(t){function e(t){var a;return Object(s.a)(this,e),(a=Object(h.a)(this,Object(p.a)(e).call(this,t))).state={data:v.concat(a.props.appData)},a}return Object(f.a)(e,t),Object(d.a)(e,[{key:\"componentWillReceiveProps\",value:function(t){t.appData!==this.props.appData&&this.setState({data:this.state.data.concat(t.appData)})}},{key:\"render\",value:function(){return r.a.createElement(m.a,{chartType:\"GeoChart\",width:\"100%\",height:\"5%\",data:this.state.data,options:b})}}]),e}(r.a.Component),O=a(104),y=a(222),j=a(107),w=a(223),g=function(t){function e(){var t,a;Object(s.a)(this,e);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(h.a)(this,(t=Object(p.a)(e)).call.apply(t,[this].concat(r)))).state={country:\"\"},a.handleChange=function(t){a.setState(Object(O.a)({},t.target.name,t.target.value))},a.handleSubmit=function(t){t.preventDefault(),a.props.onCreate(a.state),a.setState({country:\"\"})},a.handleClear=function(t){t.preventDefault()},a}return Object(f.a)(e,t),Object(d.a)(e,[{key:\"render\",value:function(){return r.a.createElement(y.a,{onSubmit:this.handleSubmit},r.a.createElement(y.a.Row,null,r.a.createElement(y.a.Label,null,\"Input ingredient list\"),r.a.createElement(y.a.Control,{as:\"textarea\",required:!0,variant:\"dark\",placeholder:\"Tomato, Green Tea, olive oil\",value:this.state.country,onChange:this.handleChange,name:\"country\"}),r.a.createElement(y.a.Control.Feedback,{type:\"invalid\"},\"Please provide a valid input.\")),r.a.createElement(\"br\",null),r.a.createElement(y.a.Row,null,r.a.createElement(y.a.Group,{as:j.a},r.a.createElement(w.a,{variant:\"dark\",type:\"submit\"},\" \\ub4f1 \\ub85d \")),r.a.createElement(y.a.Group,{as:j.a},r.a.createElement(w.a,{variant:\"danger\",type:\"clear\"},\" \\ucde8 \\uc18c \"))))}}]),e}(r.a.Component),C=a(27),D=function(t){function e(t){var a;return Object(s.a)(this,e),(a=Object(h.a)(this,Object(p.a)(e).call(this,t))).state={data:null,load:!1},a}return Object(f.a)(e,t),Object(d.a)(e,[{key:\"componentWillReceiveProps\",value:function(t){t.value!==this.state.value&&this.setState({data:t.value,load:!0})}},{key:\"render\",value:function(){var t=[[\"Country\",\"Popularity\"]];if(!0===this.state.load)for(var e=this.state.data,a=0;a<e.length;a+=1){var n=[a.toString(),e[a]];t.push(n)}return console.log(t),r.a.createElement(\"div\",null,r.a.createElement(m.a,{width:\"100%\",height:\"400px\",chartType:\"BarChart\",data:t}))}}]),e}(n.Component),S=Object(C.b)(function(t){return{value:t.addReducer.list}})(D),k=a(36),_=a(110),R=a.n(_),T=a(111),x=a.n(T),P=\"addReducer/ADDER\",I={list:[]};a(217);var L=a(220),N=a(221),G=function(t){function e(t){var a;return Object(s.a)(this,e),(a=Object(h.a)(this,Object(p.a)(e).call(this,t))).classify=function(t){var e=[1,150];return k.d(function(){var n=k.c(t).pad([[e[1]-t.length,0]]);return a.state.model.predictOnBatch(k.b(n,e))}).dataSync()},a.handleCreate=function(){var t=Object(u.a)(i.a.mark(function t(e){var n,r;return i.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(\"/getData\",{method:\"POST\",body:[e.country]}).then(function(t){return t.json()}).then(function(t){return t});case 2:n=t.sent,e.value=a.classify(n[0]),e.country=\"China\",(0,a.props.adder)(e.value),r=[e.country,100*Number(e.value)],a.setState({formData:R()(a.state.formData,{$push:[r]})});case 9:case\"end\":return t.stop()}},t)}));return function(e){return t.apply(this,arguments)}}(),a.state={formData:[],model:null},a}return Object(f.a)(e,t),Object(d.a)(e,[{key:\"componentDidMount\",value:function(){var t=Object(u.a)(i.a.mark(function t(){return i.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.t0=this,t.next=3,k.a(\"http://127.0.0.1/model\");case 3:t.t1=t.sent,t.t2={model:t.t1,loading:!0},t.t0.setState.call(t.t0,t.t2);case 6:case\"end\":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:\"render\",value:function(){var t;return t=null===this.state.model?r.a.createElement(\"container\",{class:\"centered\"},r.a.createElement(x.a,{size:120,spinnerColor:\"blue\",spinnerWidth:2}),r.a.createElement(\"p\",null,\"LOADING MODEL\")):r.a.createElement(\"div\",null,r.a.createElement(L.a,null,r.a.createElement(N.a,null,r.a.createElement(\"h1\",null,\"Prediction Model by Learning Ingredient-Cuisine\")),r.a.createElement(E,{appData:this.state.formData}),r.a.createElement(S,null),r.a.createElement(g,{onCreate:this.handleCreate}))),r.a.createElement(\"div\",null,t)}}]),e}(n.Component),A=Object(C.b)(function(t){return{value:t.addReducer.list}},function(t){return{adder:function(e){return t({type:P,list:e})}}})(G);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(218);var B=a(26),X=Object(B.b)({addReducer:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I,e=arguments.length>1?arguments[1]:void 0;switch(e.type){case P:return{list:e.list};default:return t}}}),M=window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__(),W=Object(B.c)(X,M);o.a.render(r.a.createElement(C.a,{store:W},r.a.createElement(A,null)),document.getElementById(\"root\"))}},[[113,1,2]]]);","extractedComments":[]}