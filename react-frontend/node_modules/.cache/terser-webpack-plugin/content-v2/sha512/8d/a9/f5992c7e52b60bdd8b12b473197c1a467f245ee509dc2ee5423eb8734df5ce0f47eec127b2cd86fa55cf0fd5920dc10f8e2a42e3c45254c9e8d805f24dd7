{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\components\\\\World.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\components\\\\InputForm.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\store\\\\modules\\\\addResult.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\components\\\\App.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\store\\\\modules\\\\index.js\",\"C:\\\\Users\\\\G-ICT\\\\Desktop\\\\amore_internship\\\\project\\\\Flask_React_WAP\\\\react-frontend\\\\src\\\\index.js\"],\"names\":[\"geo_Header\",\"options\",\"colorAxis\",\"colors\",\"legend\",\"World\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"data\",\"concat\",\"appData\",\"nextProps\",\"setState\",\"react_default\",\"a\",\"createElement\",\"index_esm\",\"chartType\",\"width\",\"height\",\"React\",\"Component\",\"InputForm1\",\"country\",\"value\",\"handleChange\",\"e\",\"defineProperty\",\"target\",\"name\",\"handleSubmit\",\"preventDefault\",\"onCreate\",\"handleClear\",\"Container\",\"Form\",\"onSubmit\",\"Row\",\"Label\",\"Control\",\"as\",\"required\",\"variant\",\"placeholder\",\"onChange\",\"Feedback\",\"type\",\"Group\",\"Col\",\"Button\",\"ADDER\",\"adder\",\"elem\",\"intialState\",\"list\",\"App\",\"classify\",\"preprcData\",\"inputDim\",\"tf\",\"paddedSeq\",\"pad\",\"length\",\"model\",\"predictOnBatch\",\"argMax\",\"dataSync\",\"handleCreate\",\"_ref\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"processedText\",\"singleObj\",\"wrap\",\"_context\",\"prev\",\"next\",\"fetch\",\"method\",\"body\",\"then\",\"response\",\"json\",\"result\",\"sent\",\"Number\",\"formData\",\"update\",\"$push\",\"stop\",\"_x\",\"apply\",\"arguments\",\"loading\",\"pageData\",\"class\",\"lib_default\",\"size\",\"spinnerColor\",\"spinnerWidth\",\"components_World\",\"InputForm\",\"connect\",\"addReducer\",\"dispatch\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"combineReducers\",\"undefined\",\"action\",\"devTools\",\"__REDUX_DEVTOOLS_EXTENSION__\",\"store\",\"createStore\",\"rootReducer\",\"console\",\"log\",\"getState\",\"ReactDOM\",\"render\",\"es\",\"src_components_App\",\"document\",\"getElementById\"],\"mappings\":\"sbAGIA,EAAa,CAAC,CAAC,UAAW,eAExBC,EAAU,CACfC,UAAW,CAACC,OAAQ,CAAC,UACrBC,OAAQ,QAoCMC,cA/Bb,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,KAAOf,EAAWgB,OAAOT,EAAKD,MAAMW,UAHvBV,yFAOQW,GAEpBA,EAAUD,UAAYP,KAAKJ,MAAMW,SACjCP,KAAKS,SAAS,CAACJ,KAAOL,KAAKI,MAAMC,KAAKC,OAAOE,EAAUD,4CAO1D,OACCG,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACPC,UAAU,WACVC,MAAM,OACNC,OAAO,QACPX,KAAML,KAAKI,MAAMC,KACjBd,QAASA,YAzBU0B,EAAAA,EAAMC,wDCkEXC,6MA/DZf,MAAQ,CACLgB,QAAS,GACTC,MAAO,MAGVC,aAAe,SAACC,GACZ1B,EAAKY,SAALX,OAAA0B,EAAA,EAAA1B,CAAA,GACIyB,EAAEE,OAAOC,KAAOH,EAAEE,OAAOJ,WAGjCM,aAAe,SAACJ,GAClBA,EAAEK,iBACF/B,EAAKD,MAAMiC,SAAShC,EAAKO,OACzBP,EAAKY,SAAS,CACXW,QAAS,GACFC,MAAO,QAGfS,YAAc,SAACP,GACdA,EAAEK,0FAIA,OACGlB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACLrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMC,SAAUjC,KAAK2B,cACdjB,EAAAC,EAAAC,cAACoB,EAAA,EAAKE,IAAN,KACIxB,EAAAC,EAAAC,cAACoB,EAAA,EAAKG,MAAN,KAAA,iBACAzB,EAAAC,EAAAC,cAACoB,EAAA,EAAKI,QAAN,CAAcC,GAAG,WACdC,UAAQ,EACRC,QAAQ,OACRC,YAAY,UACZnB,MAAOrB,KAAKI,MAAMgB,QAClBqB,SAAUzC,KAAKsB,aACfI,KAAK,YACRhB,EAAAC,EAAAC,cAACoB,EAAA,EAAKI,QAAQM,SAAd,CAAuBC,KAAK,WAA5B,iCAIJjC,EAAAC,EAAAC,cAACoB,EAAA,EAAKE,IAAN,KACIxB,EAAAC,EAAAC,cAACoB,EAAA,EAAKG,MAAN,KAAA,oBACPzB,EAAAC,EAAAC,cAACoB,EAAA,EAAKI,QAAN,CAAcC,GAAG,WACPE,QAAQ,OACfC,YAAY,aACLnB,MAAOrB,KAAKI,MAAMiB,MAClBoB,SAAUzC,KAAKsB,aACfI,KAAK,WAEZhB,EAAAC,EAAAC,cAAA,KAAA,MACAF,EAAAC,EAAAC,cAACoB,EAAA,EAAKE,IAAN,KACIxB,EAAAC,EAAAC,cAACoB,EAAA,EAAKY,MAAN,CAAYP,GAAIQ,EAAAA,GACbnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQP,QAAQ,OAAQI,KAAK,UAA7B,oBAEHjC,EAAAC,EAAAC,cAACoB,EAAA,EAAKY,MAAN,CAAYP,GAAIQ,EAAAA,GACbnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQP,QAAQ,SAASI,KAAK,SAA9B,8BAvDO1B,EAAAA,EAAMC,wECbzB6B,EAAQ,mBAEDC,EAAQ,SAAAC,GAAI,MAAK,CAAEN,KAAMI,EAAOE,KAAAA,IAEvCC,EAAc,CACnBC,KAAM,CAAC,CAAC,YCMT,IAGMC,cACL,SAAAA,IAAc,IAAAvD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACbvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,QAYDqD,SAAW,SAACC,GACL,IAAMC,EAAW,CAAC,EAAG,KAQvB,OAJmBC,EAAAA,EAAQ,WACxB,IAAIC,EAAYD,EAAAA,EAAYF,GAAYI,IAAK,CAAC,CAAEH,EAAS,GAAGD,EAAWK,OAAQ,KACtF,OAAQ9D,EAAKO,MAAMwD,MAAOC,eAAeL,EAAAA,EAAWC,EAAWF,MAEzCO,OAAO,GAAGC,YAtBnBlE,EA0BZmE,aA1BY,WAAA,IAAAC,EAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,EAAAxD,EAAAyD,KA0BG,SAAAC,EAAOhE,GAAP,IAAAiE,EAAAC,EAAA,OAAAJ,EAAAxD,EAAA6D,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAEeC,MAAM,WAAY,CAAEC,OAAQ,OACrCC,KAAM,CAACzE,EAAKe,WACtB2D,KAAK,SAAAC,GACN,OAAOA,EAASC,SACjBF,KAAK,SAAAG,GACJ,OAAOA,IAPF,KAAA,EAEPZ,EAFOG,EAAAU,KAUX9E,EAAKgB,MAASxB,EAAKwD,SAASiB,EAAc,IAC1CjE,EAAKe,QAAU,QAGpB4B,EAAM,CAAC3C,EAAKgB,QAGJkD,EAAY,CAAClE,EAAKe,QAA6B,IAApBgE,OAAO/E,EAAKgB,QAE3CxB,EAAKY,SAAS,CAAE4E,SAAUC,GAAAA,CAAQzF,EAAKO,MAAMiF,SACnC,CACIE,MAAO,CAAChB,OArBV,KAAA,EAAA,IAAA,MAAA,OAAAE,EAAAe,SAAAnB,MA1BH,OAAA,SAAAoB,GAAA,OAAAxB,EAAAyB,MAAA1F,KAAA2F,YAAA,GAEb9F,EAAKO,MAAQ,CACZiF,SAAU,GACVzB,MAAO,MAJK/D,uMASTG,cAA6BwD,EAAAA,EAblB,mDAaKI,WACFgC,SAAS,QADlBnF,4JA4CP,IAAIoF,EAcF,OAZIA,EADqB,OAArB7F,KAAKI,MAAMwD,MACAlD,EAAAC,EAAAC,cAAA,YAAA,CAAWkF,MAAM,YACjBpF,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,CAASqF,KAAM,IACHC,aAAc,OACfC,aAAc,IACzBxF,EAAAC,EAAAC,cAAA,IAAA,KAAA,kBAGAF,EAAAC,EAAAC,cAAA,MAAA,KACAF,EAAAC,EAAAC,cAACuF,EAAD,CAAO5F,QAASP,KAAKI,MAAMiF,WAC3B3E,EAAAC,EAAAC,cAACwF,EAAD,CAAOvE,SAAU7B,KAAKgE,gBAG5BtD,EAAAC,EAAAC,cAAA,MAAA,KAAMiF,UApEH3E,EAAAA,WAoFHmF,EAAAA,OAAAA,EAAAA,EAAAA,CAXS,SAAAjG,GAAK,MAAK,CACjC+C,KAAM/C,EAAMkG,WAAWnD,OAGG,SAAAoD,GAAQ,MAAK,CACvCvD,MAAO,SAAAG,GAAI,OAAIoD,EAAUvD,EAAMG,OAMjBkD,CAGbjD,GCzFkBoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8ECfSC,EAAAA,OAAAA,EAAAA,EAAAA,CAAgB,CAC9BP,WHIc,WACf,IADmClG,EACnCuF,UAAAhC,OAAA,QAAAmD,IAAAnB,UAAA,GAAAA,UAAA,GAD2CzC,EAAa6D,EACxDpB,UAAAhC,OAAA,EAAAgC,UAAA,QAAAmB,EACC,OAAOC,EAAOpE,MACb,KAAKI,EACJ,MAAO,CACNI,KAAM4D,EAAO9D,MAEf,QACC,OAAO7C,MILJ4G,EACLP,OAAOQ,8BAAgCR,OAAOQ,+BACzCC,EAAQC,OAAAA,EAAAA,EAAAA,CAAYC,EAAaJ,GACvCK,QAAQC,IAAIJ,EAAMK,YAElBC,EAAAA,EAASC,OACR/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAUR,MAAOA,GACjBxG,EAAAC,EAAAC,cAAC+G,EAAD,OAEAC,SAASC,eAAe\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\nimport Chart from \\\"react-google-charts\\\";\\r\\n\\r\\nlet geo_Header = [[\\\"Country\\\", \\\"Popularity\\\"]];\\r\\n\\r\\nconst options = {\\r\\n colorAxis: {colors: ['black']},\\r\\n legend: \\\"none\\\"\\r\\n};\\r\\n\\r\\n\\r\\nclass World extends React.Component {\\r\\n  constructor(props){\\r\\n     super(props);\\r\\n     this.state = {\\r\\n       data : geo_Header.concat(this.props.appData) \\r\\n     };\\r\\n  }\\r\\n\\r\\n  componentWillReceiveProps(nextProps) {\\r\\n     \\r\\n     if(nextProps.appData !== this.props.appData) {\\r\\n        this.setState({data : this.state.data.concat(nextProps.appData)});\\r\\n     }\\r\\n  }\\r\\n\\r\\n\\r\\n  render() {\\r\\n\\r\\n     return (\\r\\n      <div> \\r\\n        <Chart \\r\\n\\tchartType=\\\"GeoChart\\\" \\r\\n\\twidth=\\\"100%\\\" \\r\\n\\theight=\\\"300px\\\"\\r\\n\\tdata={this.state.data} \\r\\n\\toptions={options} \\r\\n\\t/>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default World;\\r\\n\",\"import React from 'react';\\r\\nimport {\\r\\n  Form,\\r\\n  FormGroup,\\r\\n  FormLabel,\\r\\n  FormControl,\\r\\n  Button,\\r\\n  Col,\\r\\n  Container\\r\\n} from 'react-bootstrap';\\r\\n\\r\\n\\r\\n\\r\\nclass InputForm1 extends React.Component {\\r\\n   state = {\\r\\n      country: '',\\r\\n      value: ''\\r\\n   }\\r\\n\\r\\n   handleChange = (e) => {\\r\\n       this.setState({\\r\\n          [e.target.name]: e.target.value\\r\\n       });\\r\\n   }\\r\\n   handleSubmit = (e) => {\\r\\n\\te.preventDefault();\\r\\n\\tthis.props.onCreate(this.state); // 상태 값을 부모에게 전달???\\r\\n\\tthis.setState({\\r\\n\\t   country: '',\\r\\n           value: ''\\r\\n        });\\r\\n   }\\r\\n   handleClear = (e) => {\\r\\n   \\te.preventDefault();\\r\\n   }\\r\\n\\r\\n   render() {\\r\\n      return (\\r\\n         <Container>\\r\\n\\t   <Form onSubmit={this.handleSubmit}>\\r\\n           <Form.Row>\\r\\n               <Form.Label>state.country</Form.Label>\\r\\n               <Form.Control as=\\\"textarea\\\"\\r\\n                  required\\r\\n                  variant=\\\"dark\\\"\\r\\n                  placeholder=\\\"Country\\\"\\r\\n                  value={this.state.country}\\r\\n                  onChange={this.handleChange}\\r\\n                  name=\\\"country\\\"/>\\r\\n               <Form.Control.Feedback type=\\\"invalid\\\">\\r\\n                  Please provide a valid cirt.\\r\\n               </Form.Control.Feedback>\\r\\n           </Form.Row>\\r\\n           <Form.Row>\\r\\n               <Form.Label>state.popularity</Form.Label>\\r\\n\\t       <Form.Control as=\\\"textarea\\\" \\r\\n                  variant=\\\"dark\\\"\\r\\n\\t          placeholder=\\\"Popularity\\\"\\r\\n                  value={this.state.value}\\r\\n                  onChange={this.handleChange}\\r\\n                  name=\\\"value\\\"/>\\r\\n           </Form.Row>\\r\\n           <br></br>\\r\\n           <Form.Row>\\r\\n               <Form.Group as={Col}>\\r\\n                  <Button variant=\\\"dark\\\"  type=\\\"submit\\\"> 등 록 </Button>\\r\\n               </Form.Group>\\r\\n               <Form.Group as={Col}>\\r\\n                  <Button variant=\\\"danger\\\" type=\\\"clear\\\"> 취 소 </Button>\\r\\n               </Form.Group>\\r\\n           </Form.Row>\\r\\n           </Form>\\r\\n         </Container>\\r\\n     );\\r\\n   }\\r\\n}\\r\\n\\r\\nexport default InputForm1;\\r\\n\",\"const ADDER = 'addReducer/ADDER';\\r\\n\\r\\nexport const adder = elem => ({ type: ADDER, elem });\\r\\n\\r\\nconst intialState = {\\r\\n\\tlist: [['AAAAAA']]\\r\\n};\\r\\n\\r\\nexport default function addReducer(state = intialState, action)\\r\\n{\\r\\n\\tswitch(action.type) {\\r\\n\\t\\tcase ADDER:\\r\\n\\t\\t\\treturn {\\r\\n\\t\\t\\t\\tlist: action.elem\\r\\n\\t\\t\\t};\\r\\n\\t\\tdefault:\\r\\n\\t\\t\\treturn state;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport World from './World';\\r\\nimport Form1 from './InputForm';\\r\\nimport * as tf from '@tensorflow/tfjs';\\r\\nimport './App.css'\\r\\nimport update from 'react-addons-update';\\r\\nimport Spinner from 'react-spinner-material';\\r\\n\\r\\nimport { connect } from 'react-redux';\\r\\nimport { adder } from '../store/modules/addResult';\\r\\n\\r\\nconst modelURL = 'http://127.0.0.1/model';\\r\\n\\r\\n//////////////////////////////////////////////\\r\\nclass App extends Component {\\r\\n\\tconstructor() {\\r\\n\\t\\tsuper();\\r\\n\\t\\tthis.state = {\\r\\n\\t\\t\\tformData: [],\\r\\n\\t\\t\\tmodel: null,\\r\\n      \\t\\t};\\r\\n  \\t}\\r\\n  \\r\\n\\tasync componentDidMount() {\\r\\n     \\tthis.setState({ model: await tf.loadLayersModel(modelURL),\\r\\n                   \\tloading: true});\\r\\n  \\t}\\r\\n\\r\\n\\tclassify = (preprcData) => {\\r\\n     \\t\\t\\tconst inputDim = [1, 150]\\r\\n     \\t// Data Preprocessing2 Padding preprocessedSequence -> [1, 150]\\r\\n\\t// prediction using model :: output as a softmax result that represent's probability of each 20 elements.\\r\\n\\r\\n     \\tconst prediction = tf.tidy(() => { \\r\\n        \\tlet paddedSeq = tf.tensor1d(preprcData).pad( [[ inputDim[1]-preprcData.length, 0 ]] );\\r\\n\\t\\treturn (this.state.model).predictOnBatch(tf.reshape(paddedSeq, inputDim));\\r\\n     \\t});\\r\\n     \\treturn prediction.argMax(1).dataSync();  \\r\\n  \\t}\\r\\n\\r\\n  \\t// callback function InputForm component : get input value and post server \\r\\n  \\thandleCreate = async (data) => {\\r\\n     \\t// Text Data -> server (POST : txt) -> text2Seq \\r\\n     \\t\\tvar processedText = await fetch(\\\"/getData\\\", { method: 'POST',\\r\\n            \\t\\t\\t\\t\\t\\t      body: [data.country]\\r\\n\\t\\t\\t\\t\\t\\t\\t    }).then(response => {\\r\\n           \\t\\treturn response.json();\\r\\n        \\t}).then(result => {\\r\\n           \\t\\treturn result;\\r\\n     \\t\\t});\\r\\n\\r\\n     \\t\\tdata.value  = this.classify(processedText[0]);\\r\\n     \\t\\tdata.country = \\\"China\\\";\\r\\n     \\t\\r\\n\\t\\t////\\r\\n\\t\\tadder([data.value]);\\r\\n\\t\\t////\\r\\n\\r\\n     \\tvar singleObj = [data.country, Number(data.value)* 100];\\r\\n\\t\\r\\n     \\tthis.setState({ formData: update( this.state.formData,\\r\\n           \\t\\t\\t\\t\\t{\\r\\n              \\t\\t\\t\\t\\t\\t$push: [singleObj]\\r\\n           \\t\\t\\t\\t\\t})\\r\\n     \\t\\t     })\\r\\n  \\t}\\r\\n \\r\\n  \\trender() {\\r\\n  \\t\\tlet pageData;\\r\\n    \\t\\tif( this.state.model === null ) {\\r\\n       \\t\\t\\tpageData = <container class=\\\"centered\\\">\\r\\n                  \\t\\t\\t<Spinner size={120} \\r\\n                           \\t \\t \\t spinnerColor={\\\"blue\\\"} \\r\\n                           \\t \\t\\t spinnerWidth={2} />\\r\\n                  \\t\\t\\t<p>LOADING MODEL</p>\\r\\n                  \\t\\t   </container>\\r\\n    \\t\\t} else {\\r\\n       \\t\\t\\tpageData = <div>\\r\\n                  \\t\\t\\t<World appData={this.state.formData} />\\r\\n                  \\t\\t\\t<Form1 onCreate={this.handleCreate} />\\r\\n                  \\t\\t   </div>   \\r\\n    \\t\\t}\\r\\n    \\t\\treturn ( <div>{pageData}</div> );\\r\\n  \\t}\\r\\n}\\r\\n\\r\\n\\r\\nconst mapStateToProps = state => ({\\r\\n\\tlist: state.addReducer.list,\\r\\n});\\r\\n\\r\\nconst mapDispatchToProps = dispatch => ({\\r\\n\\tadder: list => dispatch( adder(list) ),\\r\\n});\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nexport default connect(\\r\\n\\tmapStateToProps,\\r\\n\\tmapDispatchToProps\\r\\n)(App);\\r\\n\",\"// This optional code is used to register a service worker.\\r\\n// register() is not called by default.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on subsequent visits to a page, after all the\\r\\n// existing tabs open on the page have been closed, since previously cached\\r\\n// resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model and instructions on how to\\r\\n// opt-in, read https://bit.ly/CRA-PWA\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not localhost. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        if (installingWorker == null) {\\r\\n          return;\\r\\n        }\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the updated precached content has been fetched,\\r\\n              // but the previous service worker will still serve the older\\r\\n              // content until all client tabs are closed.\\r\\n              console.log(\\r\\n                'New content is available and will be used when all ' +\\r\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\r\\n              );\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config && config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      const contentType = response.headers.get('content-type');\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import { combineReducers } from 'redux';\\r\\nimport addReducer from './addResult';\\r\\n\\r\\nexport default combineReducers({\\r\\n\\taddReducer,\\r\\n});\\r\\n\\r\\n\\r\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css';\\r\\nimport React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport App from './components/App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\nimport './index.css'\\r\\n\\r\\nimport { createStore } from 'redux';\\r\\nimport rootReducer from './store/modules'\\r\\nimport { Provider } from 'react-redux';\\r\\n\\r\\nconst devTools = \\r\\n\\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\\r\\nconst store = createStore(rootReducer, devTools);\\r\\nconsole.log(store.getState());\\r\\n\\r\\nReactDOM.render(\\r\\n\\t<Provider store={store}>\\r\\n\\t<App/>\\r\\n\\t</Provider>,\\r\\n\\tdocument.getElementById('root')\\r\\n);\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{112:function(e,t,a){e.exports=a(218)},125:function(e,t){},127:function(e,t){},160:function(e,t){},161:function(e,t){},207:function(e,t){},208:function(e,t){},209:function(e,t){},210:function(e,t,a){},217:function(e,t,a){},218:function(e,t,a){\"use strict\";a.r(t);a(113);var n=a(1),r=a.n(n),c=a(101),o=a.n(c),l=a(34),u=a.n(l),i=a(60),s=a(21),d=a(22),h=a(25),p=a(23),m=a(26),f=a(102),v=[[\"Country\",\"Popularity\"]],b={colorAxis:{colors:[\"black\"]},legend:\"none\"},E=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(h.a)(this,Object(p.a)(t).call(this,e))).state={data:v.concat(a.props.appData)},a}return Object(m.a)(t,e),Object(d.a)(t,[{key:\"componentWillReceiveProps\",value:function(e){e.appData!==this.props.appData&&this.setState({data:this.state.data.concat(e.appData)})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(f.a,{chartType:\"GeoChart\",width:\"100%\",height:\"300px\",data:this.state.data,options:b}))}}]),t}(r.a.Component),y=a(104),O=a(220),w=a(221),j=a(107),C=a(222),D=function(e){function t(){var e,a;Object(s.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(h.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(r)))).state={country:\"\",value:\"\"},a.handleChange=function(e){a.setState(Object(y.a)({},e.target.name,e.target.value))},a.handleSubmit=function(e){e.preventDefault(),a.props.onCreate(a.state),a.setState({country:\"\",value:\"\"})},a.handleClear=function(e){e.preventDefault()},a}return Object(m.a)(t,e),Object(d.a)(t,[{key:\"render\",value:function(){return r.a.createElement(O.a,null,r.a.createElement(w.a,{onSubmit:this.handleSubmit},r.a.createElement(w.a.Row,null,r.a.createElement(w.a.Label,null,\"state.country\"),r.a.createElement(w.a.Control,{as:\"textarea\",required:!0,variant:\"dark\",placeholder:\"Country\",value:this.state.country,onChange:this.handleChange,name:\"country\"}),r.a.createElement(w.a.Control.Feedback,{type:\"invalid\"},\"Please provide a valid cirt.\")),r.a.createElement(w.a.Row,null,r.a.createElement(w.a.Label,null,\"state.popularity\"),r.a.createElement(w.a.Control,{as:\"textarea\",variant:\"dark\",placeholder:\"Popularity\",value:this.state.value,onChange:this.handleChange,name:\"value\"})),r.a.createElement(\"br\",null),r.a.createElement(w.a.Row,null,r.a.createElement(w.a.Group,{as:j.a},r.a.createElement(C.a,{variant:\"dark\",type:\"submit\"},\" \\ub4f1 \\ub85d \")),r.a.createElement(w.a.Group,{as:j.a},r.a.createElement(C.a,{variant:\"danger\",type:\"clear\"},\" \\ucde8 \\uc18c \")))))}}]),t}(r.a.Component),g=a(35),S=(a(210),a(108)),k=a.n(S),_=a(109),x=a.n(_),A=a(45),R=\"addReducer/ADDER\",L=function(e){return{type:R,elem:e}},N={list:[[\"AAAAAA\"]]};var T=function(e){function t(){var e;return Object(s.a)(this,t),(e=Object(h.a)(this,Object(p.a)(t).call(this))).classify=function(t){var a=[1,150];return g.d(function(){var n=g.c(t).pad([[a[1]-t.length,0]]);return e.state.model.predictOnBatch(g.b(n,a))}).argMax(1).dataSync()},e.handleCreate=function(){var t=Object(i.a)(u.a.mark(function t(a){var n,r;return u.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch(\"/getData\",{method:\"POST\",body:[a.country]}).then(function(e){return e.json()}).then(function(e){return e});case 2:n=t.sent,a.value=e.classify(n[0]),a.country=\"China\",L([a.value]),r=[a.country,100*Number(a.value)],e.setState({formData:k()(e.state.formData,{$push:[r]})});case 8:case\"end\":return t.stop()}},t)}));return function(e){return t.apply(this,arguments)}}(),e.state={formData:[],model:null},e}return Object(m.a)(t,e),Object(d.a)(t,[{key:\"componentDidMount\",value:function(){var e=Object(i.a)(u.a.mark(function e(){return u.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=this,e.next=3,g.a(\"http://127.0.0.1/model\");case 3:e.t1=e.sent,e.t2={model:e.t1,loading:!0},e.t0.setState.call(e.t0,e.t2);case 6:case\"end\":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:\"render\",value:function(){var e;return e=null===this.state.model?r.a.createElement(\"container\",{class:\"centered\"},r.a.createElement(x.a,{size:120,spinnerColor:\"blue\",spinnerWidth:2}),r.a.createElement(\"p\",null,\"LOADING MODEL\")):r.a.createElement(\"div\",null,r.a.createElement(E,{appData:this.state.formData}),r.a.createElement(D,{onCreate:this.handleCreate})),r.a.createElement(\"div\",null,e)}}]),t}(n.Component),P=Object(A.b)(function(e){return{list:e.addReducer.list}},function(e){return{adder:function(t){return e(L(t))}}})(T);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));a(217);var G=a(24),I=Object(G.b)({addReducer:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:N,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case R:return{list:t.elem};default:return e}}}),X=window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__(),B=Object(G.c)(I,X);console.log(B.getState()),o.a.render(r.a.createElement(A.a,{store:B},r.a.createElement(P,null)),document.getElementById(\"root\"))}},[[112,1,2]]]);","extractedComments":[]}